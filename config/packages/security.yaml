security:
    # Hashage du mot de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Provider : on charge les utilisateurs depuis la BDD
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Admin\Member
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: app_admin_dashboard_index
            logout:
                path: app_logout
                target: app_admin_dashboard_index

    # Hiérarchie des rôles
    role_hierarchy:
        ROLE_PRESCRIPTEUR: ROLE_USER
        ROLE_MEDIATEUR: ROLE_PRESCRIPTEUR
        ROLE_ADMIN: ROLE_MEDIATEUR
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # Gestion des accès
    access_control:
        #  Autorise tout le monde à se connecter
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }

        #  Dashboard accessible à tous les rôles connectés
        - { path: ^/admin/dashboard, roles: [ROLE_ADMIN, ROLE_MEDIATEUR, ROLE_PRESCRIPTEUR] }

        #  Gestion des membres réservée à admin + médiateur
        - { path: ^/admin/member, roles: [ROLE_ADMIN, ROLE_MEDIATEUR] }

        #  Tout le reste sous /admin réservé aux admins
        - { path: ^/admin, roles: ROLE_ADMIN }

        #  Le reste du site public
        - { path: ^/, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
